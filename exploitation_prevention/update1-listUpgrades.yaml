#######################################################################
# 
# This script runs apt update, then lists all the apt packages that
# need to be updated to the local file upgradesAvailable.txt. This file
# should be consulted before approving all Linux hosts to be upgraded
# using update2-updatePackages.yaml.
# 
#######################################################################

- name: List upgrades
  hosts: debian
  gather_facts: true
  vars:
    timestamp: "{{ ansible_date_time.epoch }}"

  tasks:
    # creates files on localhost and remote hosts
    - name: "Create temp file on each remote host to write to"
      file:
        path: /tmp/ansible_{{ timestamp }}
        state: touch

    - name: "Remove old output file from localhost"
      file:
        path: ../upgradesAvailable.txt
        state: absent
      delegate_to: localhost
      run_once: true

    - name: "Create finished file on localhost"
      file:
        path: ../upgradesAvailable.txt
        state: touch
      delegate_to: localhost
      run_once: true

    # adds header for each machine
    - include: ../header.yaml

    # looks for updates
    - name: "see if there are updates"
      command: "apt update"
      become: true

    - name: "get list of upgrades available"
      command: "apt list --upgradable"
      register: updates
      become: true

    # prints update list to local file
    - name: "organize list of upgrades"
      set_fact:
        donelist: "{{ updates.stdout_lines }}"

    - name: "print to temp file"
      lineinfile:
        dest: /tmp/ansible_{{ timestamp }}
        line: "{{ donelist | join('\n') }}"
        insertafter:
        state: present

    # local file formatting
    - name: "Ending separation line for each file"
      lineinfile:
        dest: /tmp/ansible_{{ timestamp }}
        line: "\n---------------------------------\n \n"
        state: present

    # send each file to the localhost file upgradesAvailable.txt
    - name: "get file contents from temp file on remote hosts"
      command: cat /tmp/ansible_{{ timestamp }}
      register: upgrades

    - name: "Organize file contents"
      set_fact:
        donelist: "{{ upgrades.stdout_lines }}"

    - name: "Combine contents of each remote host and print to local file"
      lineinfile:
        dest: ../upgradesAvailable.txt
        line: "{{ donelist | join('\n') }}"
        insertafter:
        state: present
      delegate_to: localhost

    - name: "Completed file line"
      lineinfile:
        dest: ../upgradesAvailable.txt
        line: "**************************************************"
        insertafter:
        state: present
      delegate_to: localhost
      run_once: true

    - name: "Remove 'Listing...' from upgrades lists"
      lineinfile:
        dest: ../upgradesAvailable.txt
        line: "Listing..."
        state: absent
      delegate_to: localhost
      run_once: true

    # deletes each local file
    - name: "Delete temp file on each remote host"
      file:
        path: /tmp/ansible_{{ timestamp }}
        state: absent
