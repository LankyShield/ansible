###############################################################################
# Get a list of all services that need to be restarted on a list of remote    #
# Debian servers and save the output locally in a file called                 #
# servicesToRestart.txt. Timestamps                                           #
# are used to ensure that the information is current, and the program will    #
# overwrite any output file that is more than TIMEOUT seconds old. This       #
# should allow it enough time to get the information from all the hosts and   #
# write them to the file while at the same time preventing the file from      #
# containing outdated information. As an extra precaution, a                  #
# line of '*' characters will be added after all hosts have been checked.     #
###############################################################################

---
- name: list services that need to be restarted
  hosts: debian
  gather_facts: true
  vars:
    timestamp: "{{ ansible_date_time.epoch }}"

  tasks:
    - name: "Create temp file on each remote host to write to"
      file:
        path: /tmp/ansible_{{ timestamp }}
        state: touch

    - name: "Delete old result file on localhost"
      file:
        path: ../servicesToRestart.txt
        state: absent
      delegate_to: localhost
      run_once: true

    - name: "Create result file on localhost"
      file:
        path: ../servicesToRestart.txt
        state: touch
      delegate_to: localhost
      run_once: true

    - include: ../header.yaml

    - name: "get list of services that need to be restarted"
      command: "nohup needrestart -r l 2>/dev/null | cat"
      register: services
      become: true

    - name: "organize list of services"
      set_fact:
        donelist: "{{ services.stdout_lines | list }}"

    - name: "print to temp file"
      lineinfile:
        dest: /tmp/ansible_{{ timestamp }}
        line: "{{ donelist | join('\n') }}"
        insertafter:
        state: present

    - name: "Ending seperation line for each file"
      lineinfile:
        dest: /tmp/ansible_{{ timestamp }}
        line: "\n------------------------------------------------------------------------------------------\n"
        insertafter:
        state: present

    - name: "get file contents from temp file on remote hosts"
      command: cat /tmp/ansible_{{ timestamp }}
      register: services

    - name: "Organize file contents"
      set_fact:
        donelist: "{{ services.stdout_lines | list }}"

    - name: "Combine contents of each remote host and print to local file"
      lineinfile:
        dest: ../servicesToRestart.txt
        line: "{{ donelist | join('\n') }}"
        insertafter:
        state: present
      delegate_to: localhost

    - name: "Completed file line"
      lineinfile:
        dest: ../servicesToRestart.txt
        line: "\n**************************************************************************************************************\n"
        insertafter:
        state: present
      delegate_to: localhost
      run_once: true

    - name: "Delete temp file on each remote host"
      file:
        path: /tmp/ansible_{{ timestamp }}
        state: absent
