#######################################################################
# 
# This YAML script creates a list of all local accounts on the machine,
# all running processes, and all services that automatically start up.
# This is then saved into a file called "accountsAndServices.txt".
# 
#######################################################################

- name: Local account, running processes, and start up programs list
  hosts: debian
  gather_facts: true
  ignore_errors: true
  vars:
    timestamp: "{{ ansible_date_time.epoch }}"

  tasks:

    # creates files on localhost and remote hosts
    - name: "Create temp file on each remote host to write to"
      file:
        path: /tmp/ansible_{{ timestamp }}
        state: touch

    - name: "Delete old result file on localhost"
      file:
        path: ../accountsAndServices.txt
        state: absent
      delegate_to: localhost
      run_once: true

    - name: "Create result file on localhost"
      file:
        path: ../accountsAndServices.txt
        state: touch
      delegate_to: localhost
      run_once: true

    # formats accountsAndServices.txt
    - name: "Security Audit Header"
      lineinfile:
        dest: ../accountsAndServices.txt
        line: "\n**************************************************************************************************************\n                             LOCAL ACCOUNTS, RUNNING PROCESSES, AND STARTUP FILES                             \n**************************************************************************************************************\n"
        insertafter:
        state: present
      delegate_to: localhost
      run_once: true

    - include: ../header.yaml

    # gets users that can sign in without Active Directory
    - name: "Get users that can sign in without Active Directory"
      shell: "cat /etc/shadow | grep -v \"*\" | grep -v \"\\!\" | cut -d: -f1"
      register: usersNoAD
      become: true

    - name: "Organize user list"
      set_fact:
        donelist: "{{ usersNoAD.stdout_lines | list }}"

    - name: "Print list to temp file"
      lineinfile:
        dest: /tmp/ansible_{{ timestamp }}
        line: "\nLocal accounts:\n\n  {{ donelist | join('\n  ') }}"
        insertafter:
        state: present

    # gets all processes
    - name: "Get a list of currently running processes"
      shell: "ps -aux"
      register: processes
      become: true

    - name: "Organize process list"
      set_fact:
        donelist: "{{ processes.stdout_lines | list }}"

    - name: "Print list to temp file"
      lineinfile:
        dest: /tmp/ansible_{{ timestamp }}
        line: "\nCurrent processes:\n\n  {{ donelist | join('\n  ') }}"
        insertafter:
        state: present

    # gets all enabled systemctl services
    - name: "Get a list of enabled systemctl services"
      shell: "(systemctl list-unit-files --type=service --state=enabled --all) | grep enabled | cut -d\" \" -f1"
      register: ctlservices
      become: true

    - name: "Organize service list"
      set_fact:
        donelist: "{{ ctlservices.stdout_lines | list }}"

    - name: "Print list to temp file"
      lineinfile:
        dest: /tmp/ansible_{{ timestamp }}
        line: "\nSystemctl services:\n\n  {{ donelist | join('\n  ') }}"
        insertafter:
        state: present

    # gets all user-specific apps that run on startup in both /home and /home/byu.local
    - name: "Get a list of startup-enabled user applications"
      shell: "(for user in `ls -1 /home`; do if [ -d \"/home/$user/.config/autostart\" ]; then echo \"Startup apps in /home/$user/.config/autostart:\"; ls -1 \"/home/$user/.config/autostart\"; fi; done;) && (if [ -d \"/home/byu.local\" ]; then for user in `ls -1 /home/byu.local`; do if [ -d \"/home/byu.local/$user/.config/autostart\" ]; then echo \"Startup apps in /home/byu.local/$user/.config/autostart:\"; ls -1 \"/home/byu.local/$user/.config/autostart\"; fi; done; fi;)"
      register: userapps
      become: true

    - name: "Organize service list"
      set_fact:
        donelist: "{{ userapps.stdout_lines | list }}"

    - name: "Print list to temp file"
      lineinfile:
        dest: /tmp/ansible_{{ timestamp }}
        line: "\nUser-specific startup apps:\n\n  {{ donelist | join('\n  ') }}"
        insertafter:
        state: present

    # finishes writing each file
    - name: "Ending separation line for each file"
      lineinfile:
        dest: /tmp/ansible_{{ timestamp }}
        line: "\n------------------------------------------------------------------------------------------\n"
        insertafter:
        state: present

    # combines files into accountsAndServices.txt and removes remote host files
    - name: "Get file contents from temp file on remote hosts"
      command: cat /tmp/ansible_{{ timestamp }}
      register: usersNoAD

    - name: "Organize file contents"
      set_fact:
        donelist: "{{ usersNoAD.stdout_lines | list }}"

    - name: "Combine contents of each remote host and print to local file"
      lineinfile:
        dest: ../accountsAndServices.txt
        line: "{{ donelist | join('\n') }}"
        insertafter:
        state: present
      delegate_to: localhost

    # deletes temp files
    - name: "Delete temp file on each remote host"
      file:
        path: /tmp/ansible_{{ timestamp }}
        state: absent
